subprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'signing'

    compileJava.options.compilerArgs = ['-Xlint'] 

    version = '0.15-SNAPSHOT'
    group = 'com.github.sviperll'
    sourceCompatibility = 1.7

    ext {
        pomDefinition = {
            project {
                url 'http://github.com/sviperll/chicory'

                scm {
                    url 'scm:git@github.com:sviperll/chicory.git'
                    connection 'scm:git@github.com:sviperll/chicory.git'
                    developerConnection 'scm:git@github.com:sviperll/chicory.git'
                }

                licenses {
                    license {
                        name 'The BSD 3-Clause License'
                        url 'http://opensource.org/licenses/BSD-3-Clause'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'sviperll'
                        name 'Victor Nazarov'
                        email 'asviraspossible@gmail.com'
                    }
                }
            }
        }
    }

    jar {
        manifest {
            // attributes provider: 'gradle'
        }
    }

    dependencies {
        testCompile(group: 'junit', name: 'junit', version: '4.11')
    }

    repositories {
       mavenCentral()
       mavenLocal()
    }

    ext {
        javacGeneratedSourcesDir = file("${buildDir}/generated-sources/javac/main/java")
    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'
                srcDir javacGeneratedSourcesDir
            }
        }
    }

    compileJava {
        doFirst {
            javacGeneratedSourcesDir.mkdirs()
        }
        options.compilerArgs += ['-s', javacGeneratedSourcesDir]
        source = source.filter { p -> !p.getPath().startsWith(javacGeneratedSourcesDir.getPath()) }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }
 
    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        classifier = 'sources'
    }

    artifacts {
        archives jar
        archives javadocJar
        archives sourcesJar
    }

    signing {
        sign configurations.archives
    }

    configurations {
        deployerJars
    }

    dependencies {
        deployerJars 'org.apache.maven.wagon:wagon-http:2.2'
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
                configuration = configurations.deployerJars
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: sonatypeUsername, password: sonatypePassword)
                }
                pom.name = project.name
                pom pomDefinition
            }
        }
    }
}


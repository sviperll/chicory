/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.github.sviperll.repository;

/**
 *
 * @author vir
 */
public class RepositoryConfigurations {
    public static <K, V> AutogeneratedKeyIndexedRepositoryConfiguration<K, V> autogeneratedKeyIndexed(final String tableName, final StorableClass<K> key, final StorableClass<K> autogeneratedKey, final StorableClass<V> value) {
        return new AutogeneratedKeyIndexedRepositoryConfiguration<K, V>() {
            @Override
            public StorableClass<K> getAutogeneratedKeyDefinition() {
                return autogeneratedKey;
            }

            @Override
            public StorableClass<V> getValueDefinition() {
                return value;
            }

            @Override
            public String getTableName() {
                return tableName;
            }

            @Override
            public StorableClass<K> getKeyDefinition() {
                return key;
            }
        };
    }

    public static <K, V> IndexedRepositoryConfiguration<K, V> indexed(final String tableName, final StorableClass<K> key, final StorableClass<V> value) {
        return new IndexedRepositoryConfiguration<K, V>() {
            @Override
            public StorableClass<K> getKeyDefinition() {
                return key;
            }

            @Override
            public StorableClass<V> getValueDefinition() {
                return value;
            }

            @Override
            public String getTableName() {
                return tableName;
            }
        };
    }

    public static <E, O> ReadableRepositoryConfiguration<E, O> readable(final String tableName, final StorableClass<E> entry, final StorableClass<O> ordering) {
        return new ReadableRepositoryConfiguration<E, O>() {

            @Override
            public StorableClass<E> getEntryDefinition() {
                return entry;
            }

            @Override
            public StorableClass<O> getOrderingDefinition() {
                return ordering;
            }

            @Override
            public String getTableName() {
                return tableName;
            }
        };
    }

    public static <K, E, O> ReadableRepositoryDirectoryConfiguration<K, E, O> readableDirectory(final String tableName, final StorableClass<E> entry, final StorableClass<K> key, final StorableClass<O> ordering) {
        return new ReadableRepositoryDirectoryConfiguration<K, E, O>() {

            @Override
            public StorableClass<E> getEntryDefinition() {
                return entry;
            }

            @Override
            public StorableClass<O> getOrderingDefinition() {
                return ordering;
            }

            @Override
            public String getTableName() {
                return tableName;
            }

            @Override
            public StorableClass<K> getKeyDefinition() {
                return key;
            }
        };
    }
}
